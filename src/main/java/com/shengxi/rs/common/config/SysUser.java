package com.shengxi.rs.common.config;

import com.shengxi.rs.common.domain.BaseEntity;
import com.shengxi.rs.common.domain.SysRole;
import com.shengxi.system.entites.sys.SysDeptEntity;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.List;

/**
 *
 * This class was generated by MyBatis Generator.
 * This class corresponds to the database table sys_user
 *
 * @mbg.generated do_not_delete_during_merge
 * @author 梁焰豪
 * @date 2019.05.12
 */
@SuppressWarnings("serial")
public class SysUser extends BaseEntity implements UserDetails {
    /**
     * Database Column Remarks:
     *   用户ID
     */
    private String userNo;

    /**
     * Database Column Remarks:
     *   用户名
     */
    private String userName;

    /**
     * Database Column Remarks:
     *   密码
     */
    private String passWord;

    /**
     * Database Column Remarks:
     *   部门ID
     */
    private Long deptId;

    /**
     * Database Column Remarks:
     *   状态 0锁定 1有效
     */
    private String status;

    /**
     * 创建人
     */
    private String createBy;

    /**
     * 创建时间
     */
    private Date createTime;

    /**
     * 更新时间
     */
    private Date udpateTime;

    /**
     * 更新人
     */
    private String udpateBy;

    /**
     * 备注
     */
    private String remark;

    /**
     * 删除标识
     */
    private String delFlag;


    private List<SysRole> roles;

    private List<SysDeptEntity> dept;

    public String getUserNo() {
        return userNo;
    }

    public void setUserNo(String userNo) {
        this.userNo = userNo;
    }

    public String getUserName() {
        return userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }

    public String getPassWord() {
        return passWord;
    }

    public void setPassWord(String passWord) {
        this.passWord = passWord;
    }

    public Long getDeptId() {
        return deptId;
    }

    public void setDeptId(Long deptId) {
        this.deptId = deptId;
    }

    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public List<SysRole> getRoles() {
        return roles;
    }

    public void setRoles(List<SysRole> roles) {
        this.roles = roles;
    }

    @Override
    public String toString() {
        return "SysUser{" +
                "userNo='" + userNo + '\'' +
                ", userName='" + userName + '\'' +
                ", passWord='" + passWord + '\'' +
                ", deptId=" + deptId +
                ", status='" + status + '\'' +
                '}';
    }

    @Override
    public Collection<? extends GrantedAuthority> getAuthorities() {
        List<GrantedAuthority> auths = new ArrayList<>();
        List<SysRole> roles = this.roles;
        for (SysRole role : roles){
            auths.add(new SimpleGrantedAuthority(role.getUserName()));
        }
        return auths;
    }

    @Override
    public String getPassword() {
        return passWord;
    }

    @Override
    public String getUsername() {
        return userName;
    }

    @Override
    public boolean isAccountNonExpired() {
        return false;
    }

    @Override
    public boolean isAccountNonLocked() {
        return true;
    }

    @Override
    public boolean isCredentialsNonExpired() {
        return true;
    }

    @Override
    public boolean isEnabled() {
        return true;
    }
}